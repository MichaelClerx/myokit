[[model]]
#
# In this example, we re-use the model and protocol from example-1 instead of
# including a copy of them here.
#
#

[engine]
time = 0
    bind time



[[script]]
import myokit
import matplotlib.pyplot as pl


#
# NOT FOR DISTRIBUTION
# This is an updated TEST version of the example, it may leave out slow parts
# of the example, or contain developer comments
#


#
# In this example, we show the three different cell types the TTP model can
# simulate.
#
# This example has been tested with Myokit XXX
#

# Instead of loading the model and protocol from this file, we can re-use the
# model from example 1.
m = myokit.load_model('test-example-ttp-1-model.mmt')
p = myokit.load_protocol('test-example-ttp-1-model.mmt')

# Create a simulation
s = myokit.Simulation(m, p)

# Create an empty figure
pl.figure()
pl.xlabel('time [ms]')
pl.ylabel('membrane potential [mV]')

# Run a simulation in every mode
modes = {
    0 : 'Endocardial',
    1 : 'Epicardial',
    2 : 'Mid-myocardial',
    }
for index, name in modes.items():

    # Change the simulation's cell type variable
    s.set_constant('cell.type', index)

    # Pre-pace for a few beats
    #s.pre(50 * 1000)
    s.pre(3 * 1000)

    # Run a logged simulation
    d = s.run(500)

    # Store to disk for post-processing (optional)
    d.save_csv('/tmp/ttp-2006-' + name + '.csv')

    # Display the simulated membrane potential
    pl.plot(d['engine.time'], d['membrane.V'], label=name)

    # Reset the simulation
    s.reset()

pl.legend(loc='upper right')
pl.show()

